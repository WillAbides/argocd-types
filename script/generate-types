#!/bin/sh

set -e

# require that a git ref is provided as the first argument
if [ -z "$1" ]; then
  echo "usage: $0 <git-ref>"
  exit 1
fi
TAG="$1"

CDPATH="" cd -- "$(dirname -- "$(dirname -- "$0")")"

mkdir -p .tmp/argocd

GITHUB_PROJECT="github.com/argoproj/argo-cd"

REPO_DIR=".tmp/argocd/repo"

# Do a bare clone of the repo
[ -d "$REPO_DIR" ] || git clone --bare "https://${GITHUB_PROJECT}.git" "${REPO_DIR}"

# Fetch all
git -C "$REPO_DIR" fetch --all 2>/dev/null

TAG_DIR="$PWD/.tmp/argocd/workspace/$TAG"

# Add worktree for the tag
[ -d "$TAG_DIR" ] || git -C "$REPO_DIR" worktree add "$TAG_DIR" "$TAG" 2>/dev/null

# checkout the tag
git -C "$TAG_DIR" checkout "$TAG" 2>/dev/null

INPUT_DIR="$TAG_DIR/pkg/apis"
OUTPUT_DIR="$PWD/argocd-apis"
rm -rf "$OUTPUT_DIR"
mkdir -p "$OUTPUT_DIR"

cp "$TAG_DIR/LICENSE" "$OUTPUT_DIR/LICENSE"

echo "This directory contains code copied from the Argo CD project at the git reference \`$TAG\`. The code is covered by
the Argo CD license which is reproduced in the LICENSE file in this directory.

The code in this directory has been modified by removing some functions and changing some types. The original code can
be found at https://github.com/argoproj/argo-cd/tree/$TAG/pkg/apis.
" >"$OUTPUT_DIR/README.md"

make -s bin/goimports bin/gofumpt

find "$INPUT_DIR" -name '*.go' | while read -r file; do
  REL_PATH="${file#"$INPUT_DIR"/}"
  echo "$REL_PATH"
  # skip _test.go files
  if [ "${REL_PATH##*_test.go}" != "$REL_PATH" ]; then
    continue
  fi
  # skip .pb.go files
  if [ "${REL_PATH##*.pb.go}" != "$REL_PATH" ]; then
    continue
  fi

  OUTPUT="$OUTPUT_DIR/$REL_PATH"
  mkdir -p "$(dirname "$OUTPUT")"
  PACKAGE="$(basename "$(dirname "$REL_PATH")")"

  echo "// Code generated by github.com/willabides/argocd-types/generator. DO NOT EDIT.

package $PACKAGE

$(go run ./generator -input "$file")
" > "$OUTPUT"

  # remove unused imports
  bin/goimports -w "$OUTPUT"
  # make it easy on the eyes
  bin/gofumpt -w "$OUTPUT"
done
